SELECT
  job_id,
  user_email,
  creation_time,
  query,                                -- 完整的查询语句
  total_bytes_billed,                   -- 计费的数据量（字节）
  total_slot_ms,                        -- 总槽位毫秒数，反映了计算资源消耗
  (total_bytes_billed / 1024 / 1024 / 1024 / 1024) AS total_terabytes_billed  -- 换算成 TiB
FROM
  `region-us.INFORMATION_SCHEMA.JOBS_BY_PROJECT`
WHERE
  -- 先用分区列过滤，这是最重要的性能和成本优化！
  creation_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY) AND CURRENT_TIMESTAMP()
  AND job_type = 'QUERY'
  AND statement_type != 'SCRIPT'
  AND total_bytes_billed > 0
ORDER BY
  total_bytes_billed DESC
LIMIT 10;

--------------------

CREATE OR REPLACE TABLE `new_gmc_data.BestSellers_TopProducts_Optimized`
PARTITION BY
  DATE(rank_timestamp) -- 1. 按日期分区
CLUSTER BY
  ranking_country, brand,ranking_category,google_product_category -- 2. 在每个分区内，按国家和品牌集群
OPTIONS(
  description="Partitioned and Clustered table of best sellers"
) AS
SELECT * FROM `new_gmc_data.BestSellers_TopProducts_Optimized`;

-- 注意：ranking_category_path 是 REPEATED 类型，不能直接作为集群键。
-- 但 ranking_country, brand, google_product_category 是非常好的选择。
------------------------

INSERT INTO `gmc-bestseller.new_gmc_data.BestSellers_TopProducts_Optimized` (
  -- 建议明确写出所有列名，确保一一对应
  rank_id, rank, ranking_country, ranking_category, brand, product_title, 
  previous_rank, price_range, relative_demand, previous_relative_demand, rank_timestamp,rank_improvement
)
SELECT
  -- 选择所有对应的列
  rank_id, rank, ranking_country, ranking_category, brand, product_title, 
  previous_rank, price_range, relative_demand, previous_relative_demand, rank_timestamp,(previous_rank - rank) AS rank_improvement
FROM
  `gmc-bestseller.new_gmc_data.BestSellers_TopProducts_Optimized`
-- 1. 关键！只选择当天新增的数据
-------------------
CREATE TABLE IF NOT EXISTS `gmc-bestseller.new_gmc_data.product_week_rank_enriched` (
  rank_id STRING,
  rank INT64,
  product_title STRING,
  category_id INT64,
  country STRING,
  image_url STRING,
  search_title STRING,
  search_link STRING,
  rank_timestamp TIMESTAMP,
  created_at TIMESTAMP,
  updated_at TIMESTAMP
)
PARTITION BY DATE(created_at)
CLUSTER BY country, category_id, rank
OPTIONS(
  description="Enriched product week rank data with Google Search API information"
); 
==================
US JP AU FR

166 222 536 1239 888